package org.synovite.mvctest.fileupload;

import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.multipart.MultipartFile;
import org.synovite.mvctest.utils.AjaxUtils;

@Controller
@RequestMapping("/fileupload")
public class FileUploadController {

    private FileUploadManager fileUploadManager;
    private static final Logger logger = LoggerFactory.getLogger(FileUploadController.class);

    @Autowired
    public FileUploadController(FileUploadManager fileUploadManager) {
	this.fileUploadManager = fileUploadManager;
    }

    @ModelAttribute
    public void ajaxAttribute(WebRequest request, Model model) {
	model.addAttribute("ajaxRequest", AjaxUtils.isAjaxRequest(request));
    }

    @RequestMapping(method = RequestMethod.GET)
    public void fileUploadForm() {
    }

    @RequestMapping(method = RequestMethod.POST)
    public void processUpload(@RequestParam("files") List<MultipartFile> filesUploaded, Model model) {
	List<String> fileNames = new ArrayList<String>();
	//if no file has been selected, a MultipartFile with no content will be passed. Check for it
	if (filesUploaded.get(0).isEmpty()) {
	    logger.info("No files selected");
	    model.addAttribute("error", "No files selected");
	} else {
	    //check if all files uploaded were of .eml extension
	    boolean filesValid = true;
	    for (MultipartFile f : filesUploaded)
		if (!".eml".equalsIgnoreCase(f.getOriginalFilename().substring(f.getOriginalFilename().length()-4)))
		    filesValid = false;
	    if (filesValid == false) {
		logger.info("Uploaded files are not the right type");
		model.addAttribute("error", "Files are not the right type");
	    } else {
		boolean succeeded = fileUploadManager.indexFiles(filesUploaded);
		if (succeeded) {
		    logger.info("Files were successfully sent to the server");
		    String message = "The following files were successfully sent to the Solr server:";
		    model.addAttribute("message", message);
		    for (MultipartFile file : filesUploaded) {
			fileNames.add(file.getOriginalFilename());
		    }
		    model.addAttribute("fileNames", fileNames);
		} else
		    model.addAttribute("error", "Indexing to Solr server failed");
	    }
	}
    }
}